<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Api on Boris van Katwijk</title>
    <link>https://bvkatwijk.github.io/tags/api/</link>
    <description>Recent content in Api on Boris van Katwijk</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Mar 2025 09:08:35 +0000</lastBuildDate>
    <atom:link href="https://bvkatwijk.github.io/tags/api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://bvkatwijk.github.io/awesome-libraries/</link>
      <pubDate>Wed, 05 Mar 2025 07:52:44 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/awesome-libraries/</guid>
      <description>&lt;p&gt;A quick list of some of the libraries I personally like and use frequently.&lt;/p&gt;&#xA;&lt;h3 id=&#34;java&#34;&gt;Java&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Purpose&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://junit.org/junit5/&#34;&gt;junit&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;All-purpose testing library and engine&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/java-faker&#34;&gt;java-faker&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Generate fake data&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://javalin.io/&#34;&gt;javalin&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Tiny web framework with functional DSL&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://j2html.com/&#34;&gt;j2html&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;type-safe html builder DSL&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://projectlombok.org/&#34;&gt;lombok&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;compile-time boilderplate code generation&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://vavr.io/&#34;&gt;vavr&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Functional programming library&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.instancio.org/&#34;&gt;instancio&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Generate test data&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://approvaltests.com/&#34;&gt;approvaltests&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Snapshot testing library&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://testcontainers.com/&#34;&gt;testcontainers&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Container framework for integration testing&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://htmx.org/&#34;&gt;htmx&lt;/a&gt; (webjar)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Tiny hypermedia framework&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; (webjar)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Front end component library&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://eclipsestore.io/&#34;&gt;EclipseStore&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Java-Native persistence library&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/stleary/JSON-java&#34;&gt;json&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;JSON implementation for Java&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://assertj.github.io/&#34;&gt;assertj&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Fluent assertions library&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://jsonassert.skyscreamer.org/&#34;&gt;jsonassert&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Assertion library for JSON&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Json Unit Testing</title>
      <link>https://bvkatwijk.github.io/blog/java---json-unit-testing/</link>
      <pubDate>Tue, 04 Feb 2025 16:19:25 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/blog/java---json-unit-testing/</guid>
      <description>&lt;p&gt;Many applications have APIs consuming and returning JSON. If you do not cover the expected inputs and output of the API you risk introducing unintentional changes. Luckily it is not hard to create these valuable test cases.&#xA;If you have types that are used both as symmetrical inputs and outputs this test pattern will provide full coverage and give you utility methods for other tests as well.&lt;/p&gt;&#xA;&lt;p&gt;For this example I&amp;rsquo;ll be using a type &lt;code&gt;Task&lt;/code&gt; having just a &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;description&lt;/code&gt; field, both &lt;code&gt;String&lt;/code&gt;s:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lenses</title>
      <link>https://bvkatwijk.github.io/blog/java---lenses/</link>
      <pubDate>Sat, 26 Oct 2024 18:26:22 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/blog/java---lenses/</guid>
      <description>&lt;h3 id=&#34;immutability&#34;&gt;Immutability&lt;/h3&gt;&#xA;&lt;p&gt;Using immutable types has a number of benefits. Since it eliminates mutation, it makes code easier to reason about. Also, it eliminates concurrent modification problems, thereby unlocking a lot of performance improvement opportunities. Java originally was fully Object-Oriented but it adapted to other paradigms. The language itself still lacks some features that makes it convenient to work with immutable data. In this post I&amp;rsquo;d like to show what can currently be done in vanilla Java and show a powerful concept to transform immutable data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Awaitility</title>
      <link>https://bvkatwijk.github.io/blog/awaitility/</link>
      <pubDate>Mon, 07 Oct 2024 10:01:38 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/blog/awaitility/</guid>
      <description>&lt;p&gt;Writing tests on asynchronous code can be a challenge. Given an asynchronous process to test, we may try to use custom code to wait for the process to finish or reach a certain state. This may cause us to end up with tests that are flaky, slow, or hard to understand. It is not uncommon for legacy projects to have these setups, and perhaps they can be improved a little.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java - Error Return Types</title>
      <link>https://bvkatwijk.github.io/blog/java---error-return-types/</link>
      <pubDate>Wed, 18 Sep 2024 15:34:48 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/blog/java---error-return-types/</guid>
      <description>&lt;p&gt;Writing code assuming everything will follow the happy path may not result in the best software quality or user experience. Sometimes we choose to ignore unhappy paths, or lack awareness of the existence of unhappy paths. Both of these scenarios can lead to runtime bugs and problems for customers which may be good to prevent.&lt;/p&gt;&#xA;&lt;p&gt;Many strategies and coding styles exist in different languages to give the developer tools to address this issue. In this post I&amp;rsquo;d like to explore some of them and illustrate my preferences.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
