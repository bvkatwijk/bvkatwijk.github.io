<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Boris van Katwijk</title>
    <link>https://bvkatwijk.github.io/tags/web/</link>
    <description>Recent content in Web on Boris van Katwijk</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Feb 2025 11:26:14 +0000</lastBuildDate>
    <atom:link href="https://bvkatwijk.github.io/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Combining htmx with Bootstrap</title>
      <link>https://bvkatwijk.github.io/blog/htmx-and-bootstrap/</link>
      <pubDate>Fri, 14 Feb 2025 10:28:07 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/blog/htmx-and-bootstrap/</guid>
      <description>&lt;p&gt;Using &lt;a href=&#34;http://htmx.org/&#34;&gt;htmx&lt;/a&gt; with &lt;a href=&#34;https://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; is mostly a seamless experience, but I&amp;rsquo;ve encountered a few places where a bit of extra effort is needed to smooth everything out. Since I could not find a concise description of the required fix, I&amp;rsquo;ve created this quick post to outline the issue and the remedy.&lt;/p&gt;&#xA;&lt;h3 id=&#34;bootstrap&#34;&gt;Bootstrap&lt;/h3&gt;&#xA;&lt;p&gt;Since I work mostly on business-to-business administrative web applications, I need to build many interfaces, yet a slick or custom styling is usually not the highest priority. We need a well rounded set of standard component that enables data presentation with clarity.&#xA;So let&amp;rsquo;s just pretend we still live in the &amp;rsquo;10s and use &lt;a href=&#34;https://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt;. A benefit is that all the scraping-trained AI&amp;rsquo;s are now all Bootstrap experts, meaning that stamping out entire dashboards is trivial.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link Swapping</title>
      <link>https://bvkatwijk.github.io/blog/security---link-swapping/</link>
      <pubDate>Tue, 01 Oct 2024 09:14:11 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/blog/security---link-swapping/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re on a website and you see a link, how do you figure out where that link will take you? Just hover over it right? Try to hovering this &lt;a href = &#34;https://wikipedia.org&#34; onclick=&#34;this.href = &#39;https://www.youtube.com/watch?v=dQw4w9WgXcQ&#39;;&#34; target=&#34;_blank&#34;&gt;Totally Legitimate Link&lt;/a&gt;. If you dare, click it.&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;ve clicked the link, welcome back! Refresh the page to have the link in it&amp;rsquo;s initial state again. Not everything is what it seems, and this is also very true when browsing the web.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo</title>
      <link>https://bvkatwijk.github.io/blog/hugo/</link>
      <pubDate>Tue, 24 Sep 2024 18:48:00 +0000</pubDate>
      <guid>https://bvkatwijk.github.io/blog/hugo/</guid>
      <description>&lt;p&gt;This website was made using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, following the quick start tutorial and iterating from there. So far its been a lot of fun, and gradually expanding website functionality has been a very natural process.&lt;/p&gt;&#xA;&lt;h3 id=&#34;content&#34;&gt;Content&lt;/h3&gt;&#xA;&lt;p&gt;I use &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; to create my content, allowing me to write using &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;MarkDown&lt;/a&gt;. Using &lt;a href=&#34;https://github.com/platers/obsidian-linter&#34;&gt;Obsidian Linter&lt;/a&gt; I can automatically insert &lt;a href=&#34;https://en.wikipedia.org/wiki/YAML&#34;&gt;YAML&lt;/a&gt; properties that Hugo will pick up as metadata.&#xA;Using this setup there is a nice separation between site content and site functionality.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
